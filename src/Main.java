//a)  Написать класс проверяемого исключения LimitException, с конструктором LimitException(String message, double
//   remainingAmount) и методом getRemainingAmount().
//b)  Написать класс BankAccount с 1 полем double amount - остаток на счете и методами getAmount() - возвращает текущий
//остаток на счете, deposit(double sum) - положить деньги на счет, withDraw(int sum) - снимает указанную сумму со счета.
// c)  Также метод withDraw() может сгенерировать исключение в том случае если запрашиваемая сумма на снятие больше
//чем остаток денег на счете.
//d)  Написать Main класс где бы создавался счет клиента. Положить 15 000 сом на счет.
// e)  Затем попытаться снять через бесконечный цикл, каждую итерацию по 6000 сом, при этом
//отлавливать исключение
//LimitException и при возникновении такого исключения снимать только ту сумму, которая осталась на счете и завершать
//бесконечный цикл
//2)
//a) Используйте цикл
//b)  Написать программу которое бы считывало сначала 5 строк которые вводит юзер и сохраняла бы их в Список А.
//        c)  Затем программа должна отобразить этот список
//d)  Потом программа считывает еще 5 строк, которые вводит юзер и помещает их в Список Б. После также отображает его в
//        консоли
//e)  Объединить Список А со Списком Б в новый список С следующим образом {A1,B5,А2,Б4,А3,Б3,А4,Б2,А5,Б1}
//f)  После объединения отобразить в консоли список С
//g)   В конце отсортировать элементы списка С по длине слова, сначала идут String-и с наименьшим количеством символов,
//и распечатать отсортированный список С.


public class Main {
    public static void main(String[] args) {
        BankAccount account = new BankAccount(15000.0);


        while (true) {
            try {
                account.withdraw(6000.0);
                System.out.println("Снято 6000 сом.Ваш баланс: " + account.getAmount());
            } catch (LimitException e) {
                System.out.println("Ошибка: " + e.getMessage());
                System.out.println("Съем доступного баланса : " + e.getRemainingAmount());
                try {
                    account.withdraw(e.getRemainingAmount());
                } catch (LimitException ex) {
                    throw new RuntimeException(ex);
                }
                System.out.println("Баланс: " + account.getAmount());
                break;
            }
        }
    }
    }
